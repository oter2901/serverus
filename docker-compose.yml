version: '3.7'

volumes:
  data:
    driver: local
  zookeeper-data:
    driver: local
  zookeeper-logs:
    driver: local
  kafka-data:
    driver: local

services:
  # proxy:
  #   image: nginx:alpine
  #   container_name: proxy
  #   ports:
  #     - '80:80'
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   restart: 'unless-stopped'
  #   depends_on:
  #     - server
  #   links:
  #     - "server"
  # server:
  #   build:
  #     context: ./
  #     target: development-build-stage
  #     dockerfile: Dockerfile
  #   container_name: server
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - ./:/app
  #     - /app/node_modules
  #   restart: 'unless-stopped'
  #   links:
  #     - kafka
  #     - postgres
  #   depends_on:
  #     - postgres
  #     - kafka
  # migrations:
  #   build:
  #     context: ./
  #     target: migrations-build-stage
  #     dockerfile: Dockerfile
  #   container_name: migrations
  #   volumes:
  #     - /app/node_modules
  #   depends_on:
  #     - postgres
  postgres:
    image: postgres:9.6
    environment:
      POSTGRES_USER: nameless
      POSTGRES_PASSWORD: secret
      POSTGRES_DB: serverus
    restart: 'unless-stopped'
    ports:
      - 5432:5432
  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - '2181:2181'
    restart: 'unless-stopped'

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - '9092:9092'
    restart: 'unless-stopped'
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${HOST_IP:-127.0.0.1}
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_BROKER_ID: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

